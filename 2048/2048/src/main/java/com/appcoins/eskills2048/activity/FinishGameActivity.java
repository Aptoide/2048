package com.appcoins.eskills2048.activity;

import android.content.Context;
import android.content.Intent;
import android.content.pm.PackageManager;
import android.content.pm.ResolveInfo;
import android.net.Uri;
import android.os.Bundle;
import androidx.annotation.Nullable;
import androidx.appcompat.app.AppCompatActivity;
import com.appcoins.eskills2048.BuildConfig;
import com.appcoins.eskills2048.repository.LocalGameStatusRepository;
import com.appcoins.eskills2048.usecase.GetRoomUseCase;
import com.appcoins.eskills2048.usecase.SetFinalScoreUseCase;
import dagger.hilt.android.AndroidEntryPoint;
import java.util.List;
import javax.inject.Inject;

@AndroidEntryPoint public class FinishGameActivity extends AppCompatActivity {
  private static final int REQUEST_CODE = 123;
  public static final String SESSION = "SESSION";
  @Inject GetRoomUseCase getRoomUseCase;
  @Inject SetFinalScoreUseCase setFinalScoreUseCase;
  @Inject LocalGameStatusRepository localGameStatusRepository;

  public static Intent buildIntent(Context context, String session) {
    Intent intent = new Intent(context, FinishGameActivity.class);
    intent.putExtra(SESSION, session);
    return intent;
  }

  @Override protected void onCreate(@Nullable Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    String session = getIntent().getStringExtra(SESSION);
    launchEskillsEndgameFlow(session);
  }

  private void launchEskillsEndgameFlow(String session) {
    String url =
        BuildConfig.BASE_HOST_PAYMENT + "/transaction/eskills/endgame?" + "session=" + session;

    Intent intent = buildTargetIntent(url);
    try {
      startActivityForResult(intent, REQUEST_CODE);
    } catch (Exception e) {
      e.printStackTrace();
    }
  }

  /**
   * This method generates the intent with the provided One Step URL to target the
   * AppCoins Wallet.
   *
   * @param url The url that generated by following the One Step payment rules
   *
   * @return The intent used to call the wallet
   */
  private Intent buildTargetIntent(String url) {
    Intent intent = new Intent(Intent.ACTION_VIEW);
    intent.setData(Uri.parse(url));
    // Check if there is an application that can process the AppCoins Billing
    // flow
    PackageManager packageManager = getApplicationContext().getPackageManager();
    List<ResolveInfo> appsList =
        packageManager.queryIntentActivities(intent, PackageManager.MATCH_DEFAULT_ONLY);
    for (ResolveInfo app : appsList) {
      if (app.activityInfo.packageName.equals("cm.aptoide.pt")) {
        // If there's aptoide installed always choose Aptoide as default to open url
        intent.setPackage(app.activityInfo.packageName);
        break;
      } else if (app.activityInfo.packageName.equals(BuildConfig.WALLET_PACKAGE_NAME)) {
        // If Aptoide is not installed and wallet is installed then choose Wallet
        // as default to open url
        intent.setPackage(app.activityInfo.packageName);
      }
    }
    return intent;
  }
}
