apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services' // Google Services plugin
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'com.google.firebase.firebase-perf'
apply plugin: 'dagger.hilt.android.plugin'

android {
  compileSdkVersion 30

  viewBinding {
    enabled = true
  }

  defaultConfig {
    minSdkVersion 21
    targetSdkVersion 30
    versionCode 31
    versionName "1.2.3"
  }

  signingConfigs {
    release {
      storeFile = file(project.APPCOINS_WALLET_STORE_FILE)
      storePassword = project.APPCOINS_WALLET_STORE_PASSWORD
      keyAlias = project.APPCOINS_WALLET_KEY_ALIAS
      keyPassword = project.APPCOINS_WALLET_KEY_PASSWORD
    }
  }

  buildTypes {
    release {
      signingConfig signingConfigs.release
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
      buildConfigField 'String', 'BASE_HOST_SKILLS', project.BASE_HOST_SKILLS_PROD
      buildConfigField 'String', 'BASE_HOST_PAYMENT', project.BASE_HOST_PAYMENT_PROD
      buildConfigField 'String', 'WALLET_PACKAGE_NAME', project.WALLET_PACKAGE_NAME_PROD
    }
    debug {
      applicationIdSuffix ".dev"
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
      buildConfigField 'String', 'BASE_HOST_SKILLS', project.BASE_HOST_SKILLS_DEV
      buildConfigField 'String', 'BASE_HOST_PAYMENT', project.BASE_HOST_PAYMENT_DEV
      buildConfigField 'String', 'WALLET_PACKAGE_NAME', project.WALLET_PACKAGE_NAME_DEV
    }
  }
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
}

dependencies {
  implementation "com.android.support:appcompat-v7:$project.appcompat_v7_version"
  implementation "androidx.appcompat:appcompat:$project.appcompat_version"
  implementation "io.reactivex.rxjava2:rxjava:$project.rxjava_version"
  implementation "io.reactivex.rxjava2:rxandroid:$project.rxandroid_version"
  implementation "com.squareup.retrofit2:retrofit:$project.retrofit_version"
  implementation "com.squareup.retrofit2:converter-gson:$project.retrofit_version"
  implementation "com.squareup.retrofit2:adapter-rxjava2:$project.retrofit_version"
  implementation "com.squareup.okhttp3:okhttp:$project.okhttp_version"
  implementation "com.google.code.gson:gson:$project.gson_version"

  implementation "androidx.constraintlayout:constraintlayout:$project.constraintlayout_version"
  implementation "com.airbnb.android:lottie:$project.lottie_version"
  implementation "com.google.android.material:material:$project.material_version"
  // Import the BoM for the Firebase platform
  implementation platform('com.google.firebase:firebase-bom:28.4.1')

  // Declare the dependencies for the Crashlytics and Analytics libraries
  // When using the BoM, you don't specify versions in Firebase library dependencies
  implementation 'com.google.firebase:firebase-crashlytics'
  implementation 'com.google.firebase:firebase-analytics'

  // Declare the dependency for the Performance Monitoring library
  // When using the BoM, you don't specify versions in Firebase library dependencies
  implementation 'com.google.firebase:firebase-perf'

  implementation "com.google.dagger:hilt-android:$project.hilt_version"
  annotationProcessor "com.google.dagger:hilt-compiler:$project.hilt_version"

  // For instrumentation tests
  androidTestImplementation "com.google.dagger:hilt-android-testing:$project.hilt_version"
  androidTestAnnotationProcessor "com.google.dagger:hilt-compiler:$project.hilt_version"

  // For local unit tests
  testImplementation "com.google.dagger:hilt-android-testing:$project.hilt_version"
  testAnnotationProcessor "com.google.dagger:hilt-compiler:$project.hilt_version"
}
